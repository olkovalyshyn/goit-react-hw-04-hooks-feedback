{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","markers","totalForm","FeedbackOptions","options","onLeaveFeedback","map","option","styleBtn","type","name","onClick","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,QAAU,8B,mBCAtED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,MAAQ,iC,gBCAvED,EAAOC,QAAU,CAAC,MAAQ,yB,qICGX,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,qBAAIC,UAAWC,IAAEC,QAAjB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,qBAAIG,UAAWC,IAAEE,UAAjB,oBAAoCL,KACpC,qBAAIE,UAAWC,IAAEE,UAAjB,gCACsBJ,EADtB,UANJ,O,oBCRW,SAASK,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,wBAEER,UAAWC,IAAEQ,SACbC,KAAK,SACLC,KAAMH,EACNI,QAAS,WACPN,EAAgBE,IANpB,SASGA,GARIA,M,oBCJI,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,oBAAIf,UAAWC,IAAEa,MAAjB,SAAyBA,IACxBC,KCLQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICIE,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBxB,EADqB,KACfyB,EADe,OAEED,mBAAS,GAFX,mBAErBvB,EAFqB,KAEZyB,EAFY,OAGNF,mBAAS,GAHH,mBAGrBtB,EAHqB,KAGhByB,EAHgB,KA0BtBC,EAAqB,WACzB,OAAO5B,EAAOC,EAAUC,GAO1B,OACE,gCACE,cAACgB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACV,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAlCc,SAACE,GACrB,OAAQA,GACN,IAAK,OACHY,EAAQzB,EAAO,GACf,MAEF,IAAK,UACH0B,EAAWzB,EAAU,GACrB,MAEF,IAAK,MACH0B,EAAOzB,EAAM,GACb,MAEF,QACE,aAsBF,cAACgB,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzBS,IACC,cAACP,EAAD,CAAcC,QAAQ,sBAEtB,cAACvB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBAAoByB,KAAKC,MApBzB9B,EAAO4B,IAAwB,YCtC3C,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2cf0c40c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"totalForm\":\"Statistics_totalForm__3abau\",\"markers\":\"Statistics_markers__MbB3h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleBtn\":\"FeedbackOptions_styleBtn__3FRUJ\",\"title\":\"FeedbackOptions_title__tjWva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__HsQ_m\"};","import React from \"react\";\r\n\r\nimport s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <ul className={s.markers}>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li className={s.totalForm}>Total: {total}</li>\r\n        <li className={s.totalForm}>\r\n          Positive feedback: {positivePercentage}%\r\n        </li>\r\n      </ul>\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map((option) => (\r\n    <button\r\n      key={option}\r\n      className={s.styleBtn}\r\n      type=\"button\"\r\n      name={option}\r\n      onClick={() => {\r\n        onLeaveFeedback(option);\r\n      }}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n","import { useState } from \"react\";\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const clickEventBtn = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n\n      default:\n        return;\n    }\n\n    // `set[option]`(option + 1);\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return (good / countTotalFeedback()) * 100;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={clickEventBtn}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={Math.round(countPositiveFeedbackPercentage())}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}